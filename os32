#include <stdio.h>


int findLRU(int time[], int n) {
    int i, minimum = time[0], pos = 0;
    for (i = 1; i < n; i++) {
        if (time[i] < minimum) {
            minimum = time[i];
            pos = i;
        }
    }
    return pos;
}

void LRU(int pages[], int n, int capacity) {
    int frame[capacity], time[capacity];
    int count = 0, page_faults = 0, flag1, flag2, pos, recent = 0;

    for (int i = 0; i < capacity; i++) {
        frame[i] = -1;  
        time[i] = 0;
    }

    for (int i = 0; i < n; i++) {
        flag1 = flag2 = 0;

   
        for (int j = 0; j < count; j++) {
            if (frame[j] == pages[i]) {
                recent++;
                time[j] = recent;
                flag1 = flag2 = 1;
                break;
            }
        }

       
        if (flag1 == 0) {
            if (count < capacity) {
                frame[count] = pages[i];
                recent++;
                time[count] = recent;
                count++;
                page_faults++;
            } else {
                pos = findLRU(time, capacity);
                frame[pos] = pages[i];
                recent++;
                time[pos] = recent;
                page_faults++;
            }
        }

        
        printf("Step %2d: ", i + 1);
        for (int j = 0; j < capacity; j++) {
            if (frame[j] != -1)
                printf("%d ", frame[j]);
            else
                printf("- ");
        }
        printf("\n");
    }

    printf("\nTotal Page Faults = %d\n", page_faults);
}

int main() {
    int n, capacity;
    
    printf("Enter number of pages: ");
    scanf("%d", &n);
    
    int pages[n];
    printf("Enter the reference string: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &pages[i]);
    
    printf("Enter number of frames: ");
    scanf("%d", &capacity);
    
    LRU(pages, n, capacity);
    
    return 0;
}
